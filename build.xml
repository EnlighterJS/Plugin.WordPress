<?xml version="1.0" encoding="UTF-8"?>

<project name="Enlighter" default="devcopy" basedir=".">

    <!-- ANT-contrib !-->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <target name="full" depends="dist"/>

    <!-- "Compile" po language support files !-->
    <target name="languages">
        <apply executable="msgfmt" dest="lang" parallel="false">
            <srcfile/>
            <arg value="-o"/>
            <targetfile/>
            <fileset dir="lang" includes="*.po"/>
            <mapper type="glob" from="*.po" to="*.mo"/>
        </apply>
    </target>

    <!-- beta releases as tar archive !-->
    <target name="beta" depends="dist">
        <tar destfile=".hidden/enlighter-beta.tar" basedir="dist/"/>
    </target>

    <!-- Static Code Check !-->
    <target name="lint">
        <apply executable="php">
            <arg value="-l"/>

            <fileset dir="." includes="**/*.php" excludes="util/**"/>
        </apply>
    </target>

    <!-- run plugin within wordpress wpdev container !-->
    <target name="dev" depends="dist">
        <!-- Credentials, Host Settings !-->
        <loadproperties srcFile=".credentials/wordpress.conf" prefix="WP"/>

        <!-- Build Docker Image !-->
        <exec executable="podman" failonerror="true">
            <arg line="build -t enlighter-test -f Dockerfile ."/>
        </exec>

        <!-- Run Webserver !-->
        <exec executable="podman" failonerror="true">
            <arg line="run --name enlighter-test -p 8080:8080 --rm -e WP_DSN=${WP.DSN} -i -v ${basedir}/.wpcontent/themes:/srv/app/public/wp-content/themes enlighter-test"/>
        </exec>
    </target>

    <!-- run plugin within wordpress wpdev container !-->
    <target name="dev-mu" depends="dist">
        <!-- Credentials, Host Settings !-->
        <loadproperties srcFile=".credentials/wordpress-mu.conf" prefix="WP"/>

        <!-- Build Docker Image !-->
        <exec executable="podman" failonerror="true">
            <arg line="build -t enlighter-test -f Dockerfile ."/>
        </exec>

        <!-- Run Webserver !-->
        <exec executable="podman" failonerror="true">
            <arg line="run --name enlighter-test -p 8080:8080 --rm -e WP_MU=on -e WP_DSN=${WP.DSN} -i -v ${basedir}/.wpcontent/themes:/srv/app/public/wp-content/themes enlighter-test"/>
        </exec>
    </target>

    <!-- Dist clean !-->
    <target name="dist-cleanup">
        <!-- cleanup !-->
        <delete dir="dist"/>
        <mkdir dir="dist"/>
    </target>

    <!-- Create Dist copy !-->
    <target name="dist" depends="dist-cleanup">

        <!-- Copy Plugin !-->
        <copy todir="dist">
            <fileset dir=".">
                <include name="cache/**" />
                <include name="modules/**" />
                <include name="lang/**" />
                <include name="resources/**" />
                <include name="views/**" />
                <include name="Enlighter.php" />
                <include name="LICENSE.txt" />
                <include name="readme.txt" />
            </fileset>
        </copy>
    </target>

    <!-- WP Release Copy !-->
    <target name="wp-release" depends="dist">
        <input message="Enter release version" addproperty="release.version"/>

        <!-- Set Tag path !-->
        <property name="svn.tag.path" value="../svn/tags/${release.version}" />
        <property name="svn.trunk.path" value="../svn/trunk" />

        <if>
            <available file="${svn.tag.path}" type="dir"/>
            <then>
                <fail message="SVN Tag ${release.version} already exists!"/>
            </then>
            <else>
                <echo message="Creating new SVN Tag"/>

                <!-- Create Tag !-->
                <mkdir dir="${svn.tag.path}"/>

                <!-- Copy Tag !-->
                <copy todir="${svn.tag.path}">
                    <fileset dir="dist"/>
                </copy>

                <!-- copy readme to trunk !-->
                <copy file="readme.txt" todir="${svn.trunk.path}" />
            </else>
        </if>

    </target>

</project>